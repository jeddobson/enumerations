colnames(a.df)<-c("data", "category")
colnames(b.df)<-c("data", "category")
c<-rbind(a.df, b.df)
View(c)
topic.no<-5
#get list of your topic words
topic.words<-term_dis[,topic.no]
#subset your original DTM by your word list
sub<-corpus.scaled[,colnames(corpus.scaled) %in% topic.words]
#sum all your topic word counts
sub.df<-data.frame(rowSums(sub))
#subset by categories
sub.a<-sub.df[grepl("Female", row.names(sub.df)),]
sub.b<-sub.df[grepl("Male", row.names(sub.df)),]
#bootstrap randomization
#establish function: this takes the mean of your summed word frequencies
boot.mean<-function(data, num){
resamples<-lapply(1:num, function(i) sample(data, replace=T))
r.mean<-sapply(resamples, mean)
return(r.mean)
}
a<-boot.mean(sub.a, 1000)
b<-boot.mean(sub.b, 1000)
#run a t-test to compare means of group a v. b for a given topic
t.test(a, b)
#plot
a.df<-data.frame(a, c("Female"))
b.df<-data.frame(b, c("Male"))
colnames(a.df)<-c("data", "category")
colnames(b.df)<-c("data", "category")
c<-rbind(a.df, b.df)
View(term_dis)
View(sub.df)
topic.no<-6
#get list of your topic words
topic.words<-term_dis[,topic.no]
#subset your original DTM by your word list
sub<-corpus.scaled[,colnames(corpus.scaled) %in% topic.words]
#sum all your topic word counts
sub.df<-data.frame(rowSums(sub))
#subset by categories
sub.a<-sub.df[grepl("Female", row.names(sub.df)),]
sub.b<-sub.df[grepl("Male", row.names(sub.df)),]
#bootstrap randomization
#establish function: this takes the mean of your summed word frequencies
boot.mean<-function(data, num){
resamples<-lapply(1:num, function(i) sample(data, replace=T))
r.mean<-sapply(resamples, mean)
return(r.mean)
}
a<-boot.mean(sub.a, 1000)
b<-boot.mean(sub.b, 1000)
#run a t-test to compare means of group a v. b for a given topic
t.test(a, b)
library(openNLP)
library(rJava)
load("~/Documents/1. Articles/Socializations - Gender and Genre/perm_data.RData")
library(splitstackshape)
library(epiR)
library(ggplot2)
library(stats)
library(DTK)
library(igraph)
library(RColorBrewer)
library(dplyr)
library(reshape2)
library(stringr)
perm.ALL
perm.ALL<-data.frame(rbind(perm.YA, perm.NYT, perm.MY, perm.SF, perm.BS, perm.ROM, perm.PW))
View(perm.ALL)
quantile(perm.ALL$mean.int.all, 0.05)
mean(assortativity.ALL$assort.int.all, na.rm=T)
min(perm.ALL$mean.int.all)
mean(assortativity.ALL$assort.int.all, na.rm=T) < min(perm.ALL$mean.int.all)
mean(assortativity.ALL$assort.int.20, na.rm=T) < min(perm.ALL$mean.int.20)
mean(assortativity.ALL$assort.int.10, na.rm=T) < min(perm.ALL$mean.int.10)
mean(assortativity.ALL$assort.rel.all, na.rm=T) < quantile(perm.ALL$mean.rel.all, 0.05)
mean(assortativity.ALL$assort.rel.all, na.rm=T)
summary(perm.ALL$mean.rel.all)
View(assortativity.ALL)
View(assortativity.ALL)
View(perm.ALL)
hist(perm.ALL$mean.int.all)
hist(perm.ALL$mean.int.20)
hist(perm.ALL$mean.int.10)
library(car)
install.packages("car")
data(Robey)
library(car)
data(Robey)
model.0<-lm(tfr~contraceptors, data=Robey)
View(Robey)
summary(model.0)
plot(model.0)
plot(tfr~contraceptors, data=Robey)
confint(model.0)
abline(model.0)
View(model.0)
View(Robey)
model.0$coefficients[[1]]
model.0$coefficients[[2]]
#how can you get predicted values for a given x?
pred.x<-Robey$contraceptors*model.0$coefficients[[2]]
pred.x
plot(pred.x)
Robey$contraceptors
View(Robey)
plot(sort(pred.x))
pred.x<-model.0$coefficients[[1]]+Robey$contraceptors*model.0$coefficients[[2]]
plot(sort(pred.x))
plot(sort(pred.x, decreasing = T))
#how can you get predicted values for a given x?
pred.x<-model.0$coefficients[[1]]+(Robey$contraceptors*model.0$coefficients[[2]])
plot(sort(pred.x, decreasing = T))
coefficients[[1]]
model.0$coefficients[[1]]
model.0$coefficients[[2]]
Robey$contraceptors
plot(pred.x)
View(Robey)
plot(Robey$contraceptors,pred.x)
pred.x
plot(model.0)
plot(Robey$contraceptors,pred.x)
pred.y<-model.0$coefficients[[1]]+(Robey$contraceptors*model.0$coefficients[[2]])
plot(Robey$contraceptors,pred.y)
rm(pred.x)
plot(model.0)
fitted(model.0)
fit.y<-fitted(model.0)
plot(fit.y)
plot(Robey$contraceptors,fit.y)
pred.y
View(Robey)
abs(pred.y-Robey$tfr)
(pred.y-Robey$tfr)^2
res<-(pred.y-Robey$tfr)^2
plot(Robey$contraceptors, res)
res
which(res == max(res))
res[12]
View(Robey)
Robey[12,]
plot(tfr~contraceptors, data=Robey)
abline(model.0)
#plot line segments between observed and predicted values
segments(Robey$contraceptors, Robey$tfr, Robey$contraceptors, pred.y)
residuals(model.0)
#calculate residuals
res<-(pred.y-Robey$tfr)
plot(Robey$contraceptors, res)
#trial 2
data("anscombe")
#trial 2
data(anscombe)
anscombe
model.0<-lm(anscombe$y1~anscombe$x1)
coef(model.0)
summary(model.0)
#trial3
data("Leinhardt")
Leinhardt
View(Leinhardt)
hist(Leinhardt$income)
hist(Leinhardt$infant)
rug(Leinhardt$income)
hist(Leinhardt$income)
rug(Leinhardt$income)
rug(Leinhardt$income, color="red")
rug(Leinhardt$income, col="red")
hist(Leinhardt$income)
hist(Leinhardt$income)
rug(Leinhardt$income, col="red")
hist(Leinhardt$infant)
rug(Leinhardt$infant, col="blue")
#trial4
#multivariate data
data(Angell)
Angell
View(Angell)
plot(Angell)
View(Angell)
#condition on group factor (region)
xyplot(moral~hetero|region, data=Angell)
#condition on group factor (region)
plot(moral~hetero|region, data=Angell)
#condition on group factor (region)
library(ggplot2)
ggplot(data=Angell, aes(hetero, moral))+
geom_point(size=4)+
facet_wrap(~region)+
geom_smooth(method="lm", se=FALSE)
data(Swiss)
data(swiss)
swiss
View(swiss)
plot(swiss)
View(swiss)
hist(swiss$Fertility)
hist(swiss$Education)
hist(swiss$Catholic)
plot(swiss$Catholic, swiss$Education)
plot(swiss$Catholic, log(swiss$Education))
plot(log(swiss$Catholic), log(swiss$Education))
model.0<-lm(log(swiss$Education)~log(swiss$Catholic))
summary(model.0)
plot(log(swiss$Education)~log(swiss$Catholic))
abline(model.0)
View(swiss)
plot(swiss$Agriculture, swiss$Education)
lm(swiss$Agriculture~swiss$Education)
model.0<-lm(swiss$Agriculture~swiss$Education)
summary(model.0)
abline(model.0)
model.0<-lm(swiss$Agriculture~swiss$Education)
plot(swiss$Agriculture~swiss$Education)
abline(model.0)
model.1<-lm(swiss$Agriculture~swiss$Education+swiss$Education^2)
abline(model.1, col="red")
summary(model.1)
model.1<-lm(swiss$Agriculture~swiss$Education+(swiss$Education^2))
summary(model.1)
model.1<-lm(swiss$Agriculture~swiss$Education+I(swiss$Education^2))
abline(model.1, col="red")
load("~/Documents/1. Articles/Socializations - Gender and Genre/gg.RData")
View(metadata.df)
View(pwc.all)
View(pwc.all)
View(pwc.all)
model.0<-lm(pwc ~ genre, data=pwc.all)
genre
View(pwc.all)
pwc.all$genre
pwc.all$pwc
as.numeric(pwc)
pwc.all$pwc2<-as.numeric(pwc)
pwc.all$pwc2<-as.numeric(pwc.all$pwc)
View(pwc.all)
pwc.all$pwc2<-as.numeric(as.character(pwc.all$pwc))
View(prev.all)
View(pwc.all)
model.0<-lm(as.numeric(pwc2) ~ genre, data=pwc.all)
model.0
summary(model.0)
pwc.all$genre
summary(model.0)
levela(pwc.all$genre)
levels(pwc.all$genre)
model.0<-lm(pwc2 ~ genre, data=pwc.all)
plot(pwc2 ~ genre, data=pwc.all)
View(pwc.all)
model.1<-lm(as.numeric(pwc2) ~ genre*ag, data=pwc.all)
plot(model.1)
model.1<-lm(as.numeric(pwc2) ~ genre+ag, data=pwc.all)
summary(model.1)
plot(pwc2 ~ genre+ag, data=pwc.all)
plot(pwc2 ~ genre:ag, data=pwc.all)
model.1<-lm(pwc2 ~ genre:ag, data=pwc.all)
summary(model.1)
levels(pwc.all$ag)
table(pwc.all$ag)
library(car)
library(effects)
install.packages("effects")
install.packages("interplot")
data("Leinhardt")
l$oilno<-2
l<-Leinhardt
View(Leinhardt)
hist(l$income)
hist(l$infant)
View(Leinhardt)
plot(l$infant~l$income)
plot(l$infant~log(l$income))
plot(log(l$infant)~log(l$income))
summary(lm(log(l$infant)~log(l$income)))
abline(lm(log(l$infant)~log(l$income)))
setwd("~/Documents/2. Books/Enumerations/Enumerations - Data and Code/05. Character")
library("ggplot2")
a<-read.csv("Char_Counts_NovelEnglish700.csv")
a<-read.csv("Char_Counts_NovelEnglish700.csv")
View(a)
View(a)
a<-read.csv("Char_Counts_NovelEnglish700.csv")
View(a)
colnames(a)
char.df<-NULL
for (i in 1:nlevels(a$file)){
sub<-a[which(a$file == levels(a$file)[i]),]
char.count<-nrow(sub)
filename<-as.character(a$file)[i]
temp.df<-data.frame(filename, char.count)
char.df<-rbind(char.df, temp.df)
}
mean.char<-round(mean(char.df$char.count))
View(char.df)
nlevels(a$file)
View(char.df)
View(char.df)
i
i=1
sub<-a[which(a$file == levels(a$file)[i]),]
View(sub)
char.count<-nrow(sub)
char.count
filename<-as.character(a$file)[i]
filename
View(sub)
View(char.df)
filename<-as.character(a$file)[i]
temp.df<-data.frame(filename, char.count)
temp.df
char.df<-NULL
for (i in 1:nlevels(a$file)){
sub<-a[which(a$file == levels(a$file)[i]),]
char.count<-nrow(sub)
filename<-as.character(a$file)[i]
temp.df<-data.frame(filename, char.count)
char.df<-rbind(char.df, temp.df)
}
View(char.df)
i=2
sub<-a[which(a$file == levels(a$file)[i]),]
char.count<-nrow(sub)
filename<-as.character(sub$file)[1]
filename
char.df<-NULL
for (i in 1:nlevels(a$file)){
sub<-a[which(a$file == levels(a$file)[i]),]
char.count<-nrow(sub)
filename<-as.character(sub$file)[1]
temp.df<-data.frame(filename, char.count)
char.df<-rbind(char.df, temp.df)
}
View(char.df)
mean.char<-round(mean(char.df$char.count))
mean.char
final.df<-NULL
for (i in 1:nlevels(a$file)){
sub<-a[which(a$file == levels(a$file)[i]),]
char.count<-sub$mentions_per_100K_words
if (length(char.count) < mean.char){
extra<-rep(0, mean.char-length(char.count))
char.count<-append(char.count, extra)
}
if (length(char.count) > mean.char){
char.count[1:mean.char]
}
final.df<-cbind(final.df, char.count)
}
View(final.df)
warnings()
i=1
sub<-a[which(a$file == levels(a$file)[i]),]
View(sub)
char.count<-sub$mentions_per_100K_words
char.count
mean.char
length(char.count)
if (length(char.count) < mean.char){
extra<-rep(0, mean.char-length(char.count))
char.count<-append(char.count, extra)
}
char.count
levels(a$file)
a$file
avg.char<-rowMeans(final.df)
index<-c(1:85)
avg.char
mean(final.df[1,])
View(final.df)
boxplot(final.df[1,])
summary(final.df[1,])
plot.df<-data.frame(index, avg.char)
ggplot(plot.df, aes(x=index, y=avg.char)) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0.5, size=10), panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
geom_point() +
#geom_line() +
labs(x="Character Rank", y="Mentions (per 100K)", caption="\nFig. 5.1 Frequency of character occurrences by character rank\n\nSource: Andrew Piper, Enumerations: Data and Literary Study (2018)")
#labs(x="Character Rank", y="Mentions (per 100K)")
ggplot(plot.df, aes(x=index, y=avg.char)) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0.5, size=10), panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
geom_point() +
#geom_line() +
labs(x="Character Rank", y="Mentions (per 100K)", caption="\nFig. 5.1 Frequency of character occurrences by character rank\nin nineteenth-century novels.\n\nSource: Andrew Piper, Enumerations: Data and Literary Study (2018)")
#labs(x="Character Rank", y="Mentions (per 100K)")
all<-read.csv("LIWC_Contemporary_Novels.csv")
mean(all$ppron)
mean(all$verb)
mean(all$conj)
mean(all$Period)
a<-read.csv("KL_Test_WithinNovelsBetweenNovels_AllTrials.csv")
a$x<-a$A.CHAR..vs..B.CHAR...1000.w.o.stop...comm..
a$y<-a$A.CHAR..vs..A.NON.CHAR...1000.w.o.stop...comm..
#observe for normality
hist(a$x, prob=T)
curve(dnorm(x, mean=mean(a$x), sd=sd(a$x)), add=TRUE)
hist(a$y, prob=T)
curve(dnorm(x, mean=mean(a$y), sd=sd(a$y)), add=TRUE)
t.test(a$A.CHAR..vs..B.CHAR...1000.w.o.stop...comm.., a$A.CHAR..vs..A.NON.CHAR...1000.w.o.stop...comm..)
wilcox.test(a$A.CHAR..vs..B.CHAR...1000.w.o.stop...comm.., a$A.CHAR..vs..A.NON.CHAR...1000.w.o.stop...comm..)
a.char<-a$A.CHAR..vs..B.CHAR...1000.w.o.stop...comm..
a.nonchar<-a$A.CHAR..vs..A.NON.CHAR...1000.w.o.stop...comm..
a.char<-data.frame(a.char, c("Between Novels"))
a.nonchar<-data.frame(a.nonchar, c("Within Novels"))
colnames(a.char)<-c("value", "category")
colnames(a.nonchar)<-c("value", "category")
b<-rbind(a.char, a.nonchar)
ggplot(b, aes(value, linetype = category)) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0.5, size=10), panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
theme(legend.position="top") +
theme(legend.title=element_blank()) +
geom_density() +
labs(x="Divergence", y="Density", caption="\nFig. 5.2 Information lost when comparing characters between novels versus\ncomparing characters to their own novels\n\nSource: Andrew Piper, Enumerations: Data and Literary Study (2018)")
#labs(x="Divergence", y="Density")
a<-read.csv("Lexical_Diversity_Cosine_All.csv", sep="\t")
final.df<-NULL
for (i in 2:nlevels(a$CLASS)){
sub<-a[a$CLASS == levels(a$CLASS)[i],]
if (nrow(sub) != 0){
model<-t.test(sub$CHAR., sub$NOUN)
class<-as.character(levels(a$CLASS)[i])
mean.char<-model$estimate[[1]]
mean.noun<-model$estimate[[2]]
model.p<-model$p.value
sd.char<-sd(sub$CHAR.)
sd.noun<-sd(sub$NOUN)
temp.df<-data.frame(class, mean.char, sd.char, mean.noun, sd.noun, model.p)
final.df<-rbind(final.df, temp.df)
}
}
View(final.df)
a<-read.csv("Lexical_Diversity_OverNarrativeTime.csv", sep="\t")
hist(a$CHAR...TOP.1000.)
hist(a$NOUN..TOP.1000.)
wilcox.test(a$CHAR...TOP.1000., a$NOUN..TOP.1000.)
median(a$CHAR...TOP.1000.)
median(a$NOUN..TOP.1000.)
plot(density(a$CHAR...TOP.1000.))
lines(density(a$NOUN..TOP.1000.), lty="dotted")
View(a)
a<-read.csv("FeatureTable_ROM_VIC_Labeled.csv")
#first subtract the introvert scores from the extrovert scores for each axis
a$COMM<-a$COMMUNICATIVENESS-a$PERCEPTION
a$SOCIO<-a$SOCIABILITY-a$COGITATION
#then normalize by scaling the values
a.norm<-a[,13:ncol(a)]
a.norm<-apply(a.norm, 2, function(x) scale(x, center = T, scale=T))
a.new<-cbind(a[,1:12], a.norm)
grid<-read.csv("FeatureTable_ROM_VIC_Normalized.csv")
grid2<-grid[which(grid$Combination_Class2 == "Male_Male" | grid$Combination_Class2 == "Female_Female"), ]
grid.f<-grid[which(grid$Combination_Class == "Female_Female"),]
library("ggplot2")
library("ggrepel")
grid<-read.csv("FeatureTable_ROM_VIC_Normalized.csv")
grid2<-grid[which(grid$Combination_Class2 == "Male_Male" | grid$Combination_Class2 == "Female_Female"), ]
grid.f<-grid[which(grid$Combination_Class == "Female_Female"),]
ggplot(grid.f, aes(x=SOCIO, y=COMM)) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0.5, size=10), panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
geom_point(size=1) +
stat_ellipse(linetype="dotted") +
theme(legend.position="none") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_text(aes(label=Austen_Title2), size=3, hjust=1.0, vjust=-0.5) +
scale_x_continuous(limits=c(-3, 3)) +
scale_y_continuous(limits=c(-3, 3)) +
labs(x="Cogitation <-> Sociability", y="Perception <-> Communication", caption="\nFig. 5.4 Ratio of introversion to extroversion in main characters in nineteenth-century novels.\nOnly novels with female authors and female protagonists are shown.\n\nSource: Andrew Piper, Enumerations: Data and Literary Study (2018)")
#labs(x="Cogitation <-> Sociability", y="Perception <-> Communication")
ggplot(grid.f, aes(x=SOCIO, y=COMM)) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0.5, size=10), panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
geom_point(size=1) +
stat_ellipse(linetype="dotted") +
theme(legend.position="none") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_text(aes(label=Austen_Title2), size=3, hjust=1.0, vjust=-0.5) +
scale_x_continuous(limits=c(-3, 3)) +
scale_y_continuous(limits=c(-3, 3)) +
labs(x="Cogitation <-> Sociability", y="Perception <-> Communication", caption="\nFig. 5.4 Ratio of introversion to extroversion in main characters in nineteenth-century\nnovels. Only novels with female authors and female protagonists are shown.\n\nSource: Andrew Piper, Enumerations: Data and Literary Study (2018)")
#labs(x="Cogitation <-> Sociability", y="Perception <-> Communication")
a<-read.csv("FeatureTable_ROM_VIC_Labeled.csv")
#test for normality for all features
shapiro.test(a$COGITATION[a$Author_Gender=="m"])
shapiro.test(a$COGITATION[a$Author_Gender == "f"])
shapiro.test(a$PERCEPTION[a$Author_Gender=="m"]) #this one appears to be slightly not-normally distributed
shapiro.test(a$PERCEPTION[a$Author_Gender=="f"])
shapiro.test(a$PERCEPTION[a$Combination=="m_F"])
shapiro.test(a$PERCEPTION[a$Combination == "f_F"])
shapiro.test(a$COGITATION[a$Combination=="m_F"])
shapiro.test(a$COGITATION[a$Combination == "f_F"])
t.test(a$COG_PER[a$Author_Gender == "f"], a$COG_PER[a$Author_Gender == "m"])
sd(a$COG_PER[a$Author_Gender == "f"])
sd(a$COG_PER[a$Author_Gender == "m"])
summary(aov(a$COG_PER ~ a$Combination))
boxplot(a$COG_PER ~ a$Combination, main="Author_Protagonist Relationship to Introversion\nMeasured by Gender")
library(DTK)
results = DTK.test(a$COG_PER,a$Combination,0.05)
DTK.plot(results)
library(igraph)
edge<-read.csv("Character_Collocates_Women_Distinctive_PMI_EdgeList_Top10.csv", header=T)
edge.sub<-edge[,2:3]
g<-graph.data.frame(edge.sub, directed=FALSE, vertices=NULL)
E(g)$weight<-1
plot.igraph(g, layout=layout_with_gem, edge.width=E(g)$weight,
edge.color="black", vertex.color="white", vertex.shape="none", vertex.label.color="black",
vertex.label.cex=0.8)
